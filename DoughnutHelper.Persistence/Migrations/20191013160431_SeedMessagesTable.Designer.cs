// <auto-generated />
using System;
using DoughnutHelper.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoughnutHelper.Persistence.Migrations
{
    [DbContext(typeof(DoughnutHelperDbContext))]
    [Migration("20191013160431_SeedMessagesTable")]
    partial class SeedMessagesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoughnutHelper.Domain.Entities.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<int>("QuestionMessageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("DoughnutHelper.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ByAnswer")
                        .HasColumnType("int");

                    b.Property<bool>("IsQuestion")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsQuestion = true,
                            Title = "Do I want a doughnut?"
                        },
                        new
                        {
                            Id = 2,
                            ByAnswer = 1,
                            IsQuestion = true,
                            ParentId = 1,
                            Title = "Do I deserve it?"
                        },
                        new
                        {
                            Id = 3,
                            ByAnswer = 1,
                            IsQuestion = true,
                            ParentId = 2,
                            Title = "Are you sure?"
                        },
                        new
                        {
                            Id = 4,
                            ByAnswer = 0,
                            IsQuestion = true,
                            ParentId = 2,
                            Title = "Is it a good doughnut?"
                        },
                        new
                        {
                            Id = 5,
                            ByAnswer = 0,
                            IsQuestion = true,
                            ParentId = 1,
                            Title = "Maybe you want an apple?"
                        },
                        new
                        {
                            Id = 6,
                            ByAnswer = 1,
                            IsQuestion = false,
                            ParentId = 3,
                            Title = "Get it."
                        },
                        new
                        {
                            Id = 7,
                            ByAnswer = 0,
                            IsQuestion = false,
                            ParentId = 3,
                            Title = "Do jumping jacks first."
                        },
                        new
                        {
                            Id = 8,
                            ByAnswer = 1,
                            IsQuestion = false,
                            ParentId = 4,
                            Title = "What are you waiting for? Grab it now."
                        },
                        new
                        {
                            Id = 9,
                            ByAnswer = 0,
                            IsQuestion = false,
                            ParentId = 4,
                            Title = "Wait 'till you find a sinful, unforgettable doughnut."
                        });
                });

            modelBuilder.Entity("DoughnutHelper.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoughnutHelper.Domain.Entities.Choice", b =>
                {
                    b.HasOne("DoughnutHelper.Domain.Entities.Message", "QuestionMessage")
                        .WithMany()
                        .HasForeignKey("QuestionMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoughnutHelper.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoughnutHelper.Domain.Entities.Message", b =>
                {
                    b.HasOne("DoughnutHelper.Domain.Entities.Message", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
